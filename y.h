#ifndef Y_HEADER
#define Y_HEADER

#define Y_STR(x) Y_STR_(x)
#define Y_STR_(x) #x

#define Y_STM(x) Y_STM_(x)
#define Y_STM_(x) x;

#define Y_IS_EMPTY(...) Y_IS_EMPTY_(__VA_ARGS__, 1)
#define Y_IS_EMPTY_(first, ...) Y_IS_EMPTY__##first
#define Y_IS_EMPTY__ 1

#define Y_EXPAND(X) X

#define Y_EVAL(...) __VA_ARGS__

#define Y_LIST(...) (__VA_ARGS__)

#define Y_HEAD(X, ...) X
#define Y_SECOND(X, Y, ...) Y
#define Y_TAIL(X, ...) (__VA_ARGS__)

#define Y_HEAD2(X, Y, ...) (X, Y)
#define Y_TAIL2(X, Y, ...) (__VA_ARGS__)

#define Y_HEAD_LS(...)   (Y_HEAD(__VA_ARGS__))
#define Y_SECOND_LS(...) (Y_SECOND(__VA_ARGS__))

#define Y_UNSHIFT(E, LS) (E, Y_EXPAND(Y_EVAL LS))

#define Y_PUSH(E, LS) Y_LIST(Y_EVAL LS, E)

#define Y_COUNT(...) Y_COUNT_(__VA_ARGS__,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0)
#define Y_COUNT_(_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_27,_28,_29,_30,_31, N, ...) N

//applies a macro (with arrity 1) to each member of a list with len <= 32
//expands each result
#define Y_EACH(M, LS) Y_EACH_(Y_COUNT LS, M, LS)
#define Y_EACH_(N, M, LS) Y_EACH__(N, M, LS)
#define Y_EACH__(N, M, LS) Y_EACH_##N (M, LS)
#define Y_EACH_1(M, LS)  Y_EVAL(M LS)
#define Y_EACH_2(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_1(M, Y_TAIL LS)
#define Y_EACH_3(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_2(M, Y_TAIL LS)
#define Y_EACH_4(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_3(M, Y_TAIL LS)
#define Y_EACH_5(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_4(M, Y_TAIL LS)
#define Y_EACH_6(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_5(M, Y_TAIL LS)
#define Y_EACH_7(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_6(M, Y_TAIL LS)
#define Y_EACH_8(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_7(M, Y_TAIL LS)
#define Y_EACH_9(M, LS)  Y_EVAL(M Y_HEAD_LS LS) Y_EACH_8(M, Y_TAIL LS)
#define Y_EACH_10(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_9(M, Y_TAIL LS)
#define Y_EACH_11(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_10(M, Y_TAIL LS)
#define Y_EACH_12(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_11(M, Y_TAIL LS)
#define Y_EACH_13(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_12(M, Y_TAIL LS)
#define Y_EACH_14(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_13(M, Y_TAIL LS)
#define Y_EACH_15(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_14(M, Y_TAIL LS)
#define Y_EACH_16(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_15(M, Y_TAIL LS)
#define Y_EACH_17(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_16(M, Y_TAIL LS)
#define Y_EACH_18(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_17(M, Y_TAIL LS)
#define Y_EACH_19(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_18(M, Y_TAIL LS)
#define Y_EACH_20(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_19(M, Y_TAIL LS)
#define Y_EACH_21(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_20(M, Y_TAIL LS)
#define Y_EACH_22(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_21(M, Y_TAIL LS)
#define Y_EACH_23(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_22(M, Y_TAIL LS)
#define Y_EACH_24(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_23(M, Y_TAIL LS)
#define Y_EACH_25(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_24(M, Y_TAIL LS)
#define Y_EACH_26(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_25(M, Y_TAIL LS)
#define Y_EACH_27(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_26(M, Y_TAIL LS)
#define Y_EACH_28(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_27(M, Y_TAIL LS)
#define Y_EACH_29(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_28(M, Y_TAIL LS)
#define Y_EACH_30(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_29(M, Y_TAIL LS)
#define Y_EACH_31(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_30(M, Y_TAIL LS)
#define Y_EACH_32(M, LS) Y_EVAL(M Y_HEAD_LS LS) Y_EACH_31(M, Y_TAIL LS)

//applies a macro (with arrity 1) to each member of a list with len <= 32
//expands to a new list with the results
#define Y_MAP(M, LS) Y_MAP_(Y_COUNT LS, M, LS)
#define Y_MAP_(N, M, LS) Y_MAP__(N, M, LS)
#define Y_MAP__(N, M, LS) Y_MAP_##N (M, Y_UNSHIFT((), LS))
#define Y_MAP_1(M, LS)  Y_EVAL(Y_TAIL Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS))
#define Y_MAP_2(M, LS)  Y_MAP_1(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_3(M, LS)  Y_MAP_2(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_4(M, LS)  Y_MAP_3(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_5(M, LS)  Y_MAP_4(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_6(M, LS)  Y_MAP_5(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_7(M, LS)  Y_MAP_6(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_8(M, LS)  Y_MAP_7(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_9(M, LS)  Y_MAP_8(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_10(M, LS) Y_MAP_9(M,   Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_11(M, LS) Y_MAP_10(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_12(M, LS) Y_MAP_11(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_13(M, LS) Y_MAP_12(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_14(M, LS) Y_MAP_13(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_15(M, LS) Y_MAP_14(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_16(M, LS) Y_MAP_15(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_17(M, LS) Y_MAP_16(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_18(M, LS) Y_MAP_17(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_19(M, LS) Y_MAP_18(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_20(M, LS) Y_MAP_19(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_21(M, LS) Y_MAP_20(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_22(M, LS) Y_MAP_21(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_23(M, LS) Y_MAP_22(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_24(M, LS) Y_MAP_23(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_25(M, LS) Y_MAP_24(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_26(M, LS) Y_MAP_25(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_27(M, LS) Y_MAP_26(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_28(M, LS) Y_MAP_27(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_29(M, LS) Y_MAP_28(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_30(M, LS) Y_MAP_29(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_31(M, LS) Y_MAP_30(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))
#define Y_MAP_32(M, LS) Y_MAP_31(M,  Y_UNSHIFT(Y_PUSH(M Y_SECOND_LS LS, Y_HEAD LS), Y_TAIL2 LS))

//applies a reducer macro (with arrity 2) to an accumulator and each element of a list with len <=32
//expands to the accumulated value
#define Y_REDUCE(M, LS) Y_REDUCE_(Y_COUNT LS, M, LS)
#define Y_REDUCE_(N, M, LS) Y_REDUCE__(N, M, LS)
#define Y_REDUCE__(N, M, LS) Y_REDUCE_##N (M, LS)
#define Y_REDUCE_1(M, LS)  Y_EXPAND(Y_EVAL LS)
#define Y_REDUCE_2(M, LS)  Y_REDUCE_1(M,  Y_LIST(Y_EVAL(M Y_HEAD2 LS)))
#define Y_REDUCE_3(M, LS)  Y_REDUCE_2(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_4(M, LS)  Y_REDUCE_3(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_5(M, LS)  Y_REDUCE_4(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_6(M, LS)  Y_REDUCE_5(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_7(M, LS)  Y_REDUCE_6(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_8(M, LS)  Y_REDUCE_7(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_9(M, LS)  Y_REDUCE_8(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_10(M, LS) Y_REDUCE_9(M,  Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_11(M, LS) Y_REDUCE_10(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_12(M, LS) Y_REDUCE_11(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_13(M, LS) Y_REDUCE_12(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_14(M, LS) Y_REDUCE_13(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_15(M, LS) Y_REDUCE_14(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_16(M, LS) Y_REDUCE_15(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_17(M, LS) Y_REDUCE_16(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_18(M, LS) Y_REDUCE_17(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_19(M, LS) Y_REDUCE_18(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_20(M, LS) Y_REDUCE_19(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_21(M, LS) Y_REDUCE_20(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_22(M, LS) Y_REDUCE_21(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_23(M, LS) Y_REDUCE_22(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_24(M, LS) Y_REDUCE_23(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_25(M, LS) Y_REDUCE_24(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_26(M, LS) Y_REDUCE_25(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_27(M, LS) Y_REDUCE_26(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_28(M, LS) Y_REDUCE_27(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_29(M, LS) Y_REDUCE_28(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_30(M, LS) Y_REDUCE_29(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_31(M, LS) Y_REDUCE_30(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))
#define Y_REDUCE_32(M, LS) Y_REDUCE_31(M, Y_UNSHIFT(Y_EXPAND(M Y_HEAD2 LS), Y_EXPAND(Y_TAIL2 LS)))

#endif
